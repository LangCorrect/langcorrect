enum Gender {
    MALE
    FEMALE
    OTHER
    UNKNOWN
}

enum Role {
    ADMIN
    MODERATOR
    PREMIUM
    CONTRIBUTOR
    VIP
    USER
    UNVERIFIED
    BANNED
}

enum Proficiency {
    A1
    A2
    B1
    B2
    C1
    C2
    NATIVE
}

model User {
    uuid                    String                    @id @default(uuid()) @db.Uuid
    createdAt               DateTime                  @default(now())
    updatedAt               DateTime                  @updatedAt
    lastLogin               DateTime?
    password                String                    @db.VarChar(128)
    username                String                    @unique @db.VarChar(100) // TODO: change this back to a sensible default
    firstName               String?                   @db.VarChar(20)
    lastName                String?                   @db.VarChar(20)
    email                   String                    @unique @db.VarChar(120)
    gender                  Gender                    @default(UNKNOWN)
    bio                     String?                   @db.Text
    staffNote               String?                   @db.Text // TODO: deprecate
    role                    Role                      @default(UNVERIFIED)
    languages               UserLanguage[]
    followers               UserFollow[]              @relation("UserFollowFollowers")
    following               UserFollow[]              @relation("UserFollowFollowing")
    challenge               Challenge[]
    prompt                  Prompt[]
    post                    Post[]
    postRow                 PostRow[]
    postUserCorrection      PostUserCorrection[]
    postUserCorrectionReply PostUserCorrectionReply[]
}

model UserLanguage {
    uuid       String      @id @default(uuid()) @db.Uuid
    createdAt  DateTime    @default(now())
    updatedAt  DateTime    @updatedAt
    level      Proficiency
    languageId String      @db.Uuid
    language   Language    @relation(fields: [languageId], references: [uuid])
    userId     String      @db.Uuid
    user       User        @relation(fields: [userId], references: [uuid])

    @@unique([userId, languageId])
}

model UserFollow {
    uuid        String   @id @default(uuid()) @db.Uuid
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
    followerId  String   @db.Uuid
    follower    User     @relation("UserFollowFollowers", fields: [followerId], references: [uuid])
    followingId String   @db.Uuid
    following   User     @relation("UserFollowFollowing", fields: [followingId], references: [uuid])

    @@unique([followerId, followingId])
}
